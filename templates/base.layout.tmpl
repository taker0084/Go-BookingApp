{{define "base"}}
    <!DOCTYPE html>
<html lang="en">
  <head>
    <!-- Required meta tags -->
    <meta charset="utf-8" />
    <meta
      name="viewport"
      content="width=device-width, initial-scale=1, shrink-to-fit=no"
    />

    <title>My Nice Page</title>

    <link
      rel="stylesheet"
      href="https://cdn.jsdelivr.net/npm/bootstrap@4.6.0/dist/css/bootstrap.min.css"
      integrity="sha384-B0vP5xmATw1+K9KRQjQERJvTumQW0nPEzvF6L/Z6nronJ3oUOFUFpCjEUQouq2+l"
      crossorigin="anonymous"
    />
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/vanillajs-datepicker@1.3.4/dist/css/datepicker-bs5.min.css">
    <link rel="stylesheet" type="text/css" href="https://unpkg.com/notie/dist/notie.min.css">
    <link rel="stylesheet" type="text/css" href="static/css/styles.css">

    <style>
      .btn-outline-secondary {
        color: aqua;
        border-color: #6c757d;
      }
      .paraClass{
        font-size: 3em;
      }
      .secondClass{
        color: red;
      }
      #para{
        text-decoration: underline;
      }
    </style>

  </head>

  <body>
    <nav class="navbar navbar-expand-lg navbar-dark bg-dark">
      <a class="navbar-brand" href="#">Navbar</a>
      <button
        class="navbar-toggler"
        type="button"
        data-toggle="collapse"
        data-target="#navbarNav"
        aria-controls="navbarNav"
        aria-expanded="false"
        aria-label="Toggle navigation"
      >
        <span class="navbar-toggler-icon"></span>
      </button>
      <div class="collapse navbar-collapse" id="navbarNav">
        <ul class="navbar-nav">
          <li class="nav-item active">
            <a class="nav-link" href="/"
              >Home <span class="sr-only">(current)</span></a
            >
          </li>
          <li class="nav-item">
            <a class="nav-link" href="/about">About</a>
          </li>
          <li class="nav-item dropdown">
            <a
              class="nav-link dropdown-toggle"
              href="#"
              id="navbarDropdownMenuLink"
              role="button"
              data-toggle="dropdown"
              aria-haspopup="true"
              aria-expanded="false"
            >
              Rooms
            </a>
            <div class="dropdown-menu" aria-labelledby="navbarDropdownMenuLink">
              <a class="dropdown-item" href="/generals-quarters"
                >General's Quarters</a
              >
              <a class="dropdown-item" href="/majors-suite">Major's Suite</a>
            </div>
          </li>
          <li class="nav-item"></li>
            <a class="nav-link" href="/search-availability", tabindex="-1", aria-disabled="true">Book Now</a>
          </li>
          <li class="nav-item">
            <a class="nav-link" href="/contact" tabindex="-1", aria-disabled="true">Contact</a>
          </li>
        </ul>
      </div>
    </nav>
    <body>
    {{block "content" .}}

    {{end}}
    <footer class="my-footer">
      <div class="row">
        <div class="col">left</div>

        <div class="col">center</div>

        <div class="col">right</div>
      </div>
    </footer>

    <script
      src="https://code.jquery.com/jquery-3.5.1.slim.min.js"
      integrity="sha384-DfXdz2htPH0lsSSs5nCTpuj/zy4C+OGpamoFVy38MVBnE+IbbVYUew+OrCXaRkfj"
      crossorigin="anonymous"
    ></script>
    <script
      src="https://cdn.jsdelivr.net/npm/bootstrap@4.6.0/dist/js/bootstrap.bundle.min.js"
      integrity="sha384-Piv4xVNRyMGpqkS2by6br4gNJ7DXjqk09RmUpJ8jgGtD7zP9yug3goQfGII0yAns"
      crossorigin="anonymous"
    ></script>
    <script src="https://cdn.jsdelivr.net/npm/vanillajs-datepicker@1.3.4/dist/js/datepicker-full.min.js"></script>
    <script src="https://unpkg.com/notie"></script>
    <script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>

    {{block "js" .}}

    {{end}}
    <script>
      let attention = Prompt();
      
      (() => {
        'use strict'

        // Fetch all the forms we want to apply custom Bootstrap validation styles to
        const forms = document.querySelectorAll('.needs-validation')

        // Loop over them and prevent submission
        Array.from(forms).forEach(form => {
          form.addEventListener('submit', event => {
            if (!form.checkValidity()) {
              event.preventDefault()
              event.stopPropagation()
            }

            form.classList.add('was-validated')
          }, false)
        })
      })()

      function notify(msg, msgType){
        notie.alert({
          type: msgType, // optional, default = 4, enum: [1, 2, 3, 4, 5, 'success', 'warning', 'error', 'info', 'neutral']
          text: msg,
        })
      }

      function notifyModal(title,text,icon,confirmationButtonText){
        Swal.fire({
          title: title,
          html: text,
          icon: icon,
          confirmButtonText: confirmationButtonText
        })
      }

      {{with .Error}}
      notify("{{.}}", "error")
      {{end}}

      {{with .Flash}}
      notify("{{.}}","success")
      {{end}}

      {{with .Warning}}
      notify("{{.}}","warning")
      {{end}}

      function Prompt(){
        let toast = (c)=>{
          const{
            msg = "",
            icon = "success",
            position = "top-end"
          } = c;

          const Toast = Swal.mixin({
            toast: true,
            title: msg,
            position: position,
            icon: icon,
            showConfirmButton: false,
            timer: 3000,
            timerProgressBar: true,
            didOpen: (toast) => {
              toast.onmouseenter = Swal.stopTimer;
              toast.onmouseleave = Swal.resumeTimer;
            }
          });
          Toast.fire({});
        }
        let success = (c)=>{
          const {
            msg = "",
            title = "",
            footer = ""
          } = c
          Swal.fire({
            icon: "success",
            title: title,
            text: msg,
            footer: footer
          });
        }

        let error = (c)=>{
          const {
            msg = "",
            title = "",
            footer = ""
          } = c
          Swal.fire({
            icon: "error",
            title: title,
            text: msg,
            footer: footer
          });
        }

        async function custom(c){
          const {
            msg = "",
            title = "",
          }=c

          const { value: result } = await Swal.fire({
            title: title,
            html: msg,
            backdrop: false,
            focusConfirm: false,
            showCancelButton: true,
            willOpen: ()=>{
              if(c.willOpen !== undefined) {
                c.willOpen();
              }
            },
            preConfirm: () => {
              return [
                document.getElementById("start").value,
                document.getElementById("end").value
              ];
            },
            didOpen: ()=>{
              if(c.didOpen !== undefined){
                c.didOpen();
              }
            },
          })

          if(result){
            if(result.dismiss !== Swal.DismissReason.cancel){
                if (result.value !== ""){
                    if(c.callback !== undefined){
                        c.callback(result);
                    }
                }else{
                    c.callback(false);
                }
            }else{
                c.call(false);
            }
          }
        }
        return{
          toast: toast,
          success: success,
          error: error,
          custom: custom,
        }
      }
    </script>
  </body>
  </html>
{{end}}